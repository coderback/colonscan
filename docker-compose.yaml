# docker-compose.yml
services:
  db:
    image: postgres:latest
    container_name: iPostgresDB
    build: ./db
    volumes:
      - ./db/postgres_config/pg_hba.conf:/postgres_config/pg_hba.conf
      - ./db/postgres_config/pg_ident.conf:/postgres_config/pg_ident.conf
      - ./db/postgres_config/postgresql.conf:/postgres_config/postgresql.conf
      - ./db/backups/backup.sql:/backups/backup.sql
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: colonscan_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"

  backend:
    image: django:latest
    container_name: iDjango_Backend
    build: ./backend
    volumes:
      - ./backend:/app
      - ./media:/app/media
    command: gunicorn colonscan.wsgi:application --bind 0.0.0.0:8000
    depends_on:
      - db
      - redis
      - histopathology
    ports:
      - "8000:8000"
    environment:
      - DATABASE_NAME=colonscan_db
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=admin
      - DATABASE_HOST=db
      - DATABASE_PORT=5432

  frontend:
    image: node:22.15.0-alpine
    container_name: iReact_Frontend
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      NODE_ENV: development
    command: npm run dev

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: iNginx_Proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend

  redis:
    image: redis:8.0-rc1-alpine
    container_name: iRedis
    ports:
      - "6379:6379"

  celery-worker:
    image: django:latest
    container_name: iCelery
    build: ./backend
    command: celery -A colonscan worker --loglevel=info
    volumes:
      - ./backend:/app
      - ./media:/app/media
    depends_on:
      - backend
      - redis
    environment:
      - DATABASE_NAME=colonscan_db
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=admin
      - DATABASE_HOST=db
      - DATABASE_PORT=5432

# Histopath slide inference (FastAPI + Torch/TensorFlow)
  histopathology:
    build: ./histopathology
    container_name: iHistopathology
    image: colonscan/histopathology:latest
    # if you have GPUs, use the nvidia runtime
    runtime: nvidia
    ports:
      - "8001:8001"
    volumes:
      - ./histopathology/models:/models:ro

  # Polyp detection service
  colonoscopy:
    build: ./colonoscopy
    container_name: iColonoscopy
    image: colonscan/colonoscopy:latest
    runtime: nvidia
    ports:
      - "8002:8002"
    volumes:
      - ./colonoscopy/models:/models:ro

volumes:
  postgres_data:
